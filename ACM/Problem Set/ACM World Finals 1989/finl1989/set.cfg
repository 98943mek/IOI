Set-contest:      World Finals 1989 ACM Contest
Set-name:         Finals 1989
Set-date:         1989
Set-id:           finl1989
Set-archive:      set_finl1989.tgz
Set-solution-archive: finl1989.tgz


Problem:         A
Name:            Rare Order
Description:     linearize relation
Class:           combinatory
Subclass:        
Algorithm:       direct
Text:            a.htm
Solution:        a.c
Input:           a.in
Output:          a.out
Input-generator: a_gen.pl
Solution:        a1.c
Solution:        a2.c

Problem:         B
Name:            Squares
Description:     count squares
Class:           2D Geometry
Subclass:        rectangular
Algorithm:       dynamic programming
Text:            b.htm
File:            b1.gif
Solution:        b.c
Input:           b.in
Output:          b.out
Input-generator: b_gen.c

Problem:         C
Name:            Repeating Decimals
Description:     evaluate fraction
Class:           numbers
Subclass:        long numbers
Algorithm:       direct
Text:            c.htm
File:            c1.gif
File:            c2.gif
File:            c3.gif
Solution:        c.c
Input:           c.in
Output:          c.out
Input-generator: c_gen.c

Problem:         D
Name:            Running Lights Visibility Calculator
Description:     compute translation vector
Class:           geometry
Subclass:        trigonometric
Algorithm:       direct
Text:            d.htm
File:            d1.gif
File:            d2.gif
File:            d3.gif
File:            d4.gif
Solution:        d.c
Input:           d.in
Output:          d.out
Input-generator: d_gen.c

Problem:         E
Name:            Robot Crash
Description:     ray intersection
Class:           geometry
Subclass:        linear
Algorithm:       direct
Text:            e.htm
File:            e1.gif
File:            e2.gif
File:            e3.gif
File:            e4.gif
Solution:        e.c
Input:           e.in
Output:          e.out
Input-generator: e_gen.c

Problem:         F
Name:            Getting There
Description:     graph routing
Class:           graphs
Subclass:        shortest path
Algorithm:       recursive
Text:            f.htm
Solution:        f.c
Input:           f.in
Output:          f.out
Input-generator: f_gen.c

Problem:         G
Name:            Meals on Wheels Routihg System
Description:     sort locations
Class:           database
Subclass:        sorting
Algorithm:       heapsort
Text:            g.htm
File:            g1.gif
Solution:        g.c
Input:           g.in
Output:          g.out
Input-generator: g_gen.c

Problem:         H
Name:            PGA Tour Prize Money
Description:     sort players
Class:           database
Subclass:        sorting
Algorithm:       heapsort
Text:            h.htm
Solution:        h.c
Input:           h.in
Output:          h.out
Input-generator: h_gen.c
